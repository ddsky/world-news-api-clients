{-
   World News API

   The world's news wrapped into a single API.

   OpenAPI Version: 3.0.0
   World News API API version: 1.1
   Contact: mail@worldnewsapi.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : WorldNews.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module WorldNews.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import WorldNews.Model
import WorldNews.Core


-- * ExtractLinksResponse

-- | 'extractLinksResponseNewsLinks' Lens
extractLinksResponseNewsLinksL :: Lens_' ExtractLinksResponse (Maybe [Text])
extractLinksResponseNewsLinksL f ExtractLinksResponse{..} = (\extractLinksResponseNewsLinks -> ExtractLinksResponse { extractLinksResponseNewsLinks, ..} ) <$> f extractLinksResponseNewsLinks
{-# INLINE extractLinksResponseNewsLinksL #-}



-- * ExtractNewsResponse

-- | 'extractNewsResponseTitle' Lens
extractNewsResponseTitleL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseTitleL f ExtractNewsResponse{..} = (\extractNewsResponseTitle -> ExtractNewsResponse { extractNewsResponseTitle, ..} ) <$> f extractNewsResponseTitle
{-# INLINE extractNewsResponseTitleL #-}

-- | 'extractNewsResponseText' Lens
extractNewsResponseTextL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseTextL f ExtractNewsResponse{..} = (\extractNewsResponseText -> ExtractNewsResponse { extractNewsResponseText, ..} ) <$> f extractNewsResponseText
{-# INLINE extractNewsResponseTextL #-}

-- | 'extractNewsResponseUrl' Lens
extractNewsResponseUrlL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseUrlL f ExtractNewsResponse{..} = (\extractNewsResponseUrl -> ExtractNewsResponse { extractNewsResponseUrl, ..} ) <$> f extractNewsResponseUrl
{-# INLINE extractNewsResponseUrlL #-}

-- | 'extractNewsResponseImage' Lens
extractNewsResponseImageL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseImageL f ExtractNewsResponse{..} = (\extractNewsResponseImage -> ExtractNewsResponse { extractNewsResponseImage, ..} ) <$> f extractNewsResponseImage
{-# INLINE extractNewsResponseImageL #-}

-- | 'extractNewsResponseAuthor' Lens
extractNewsResponseAuthorL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseAuthorL f ExtractNewsResponse{..} = (\extractNewsResponseAuthor -> ExtractNewsResponse { extractNewsResponseAuthor, ..} ) <$> f extractNewsResponseAuthor
{-# INLINE extractNewsResponseAuthorL #-}

-- | 'extractNewsResponseLanguage' Lens
extractNewsResponseLanguageL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseLanguageL f ExtractNewsResponse{..} = (\extractNewsResponseLanguage -> ExtractNewsResponse { extractNewsResponseLanguage, ..} ) <$> f extractNewsResponseLanguage
{-# INLINE extractNewsResponseLanguageL #-}

-- | 'extractNewsResponseSourceCountry' Lens
extractNewsResponseSourceCountryL :: Lens_' ExtractNewsResponse (Maybe Text)
extractNewsResponseSourceCountryL f ExtractNewsResponse{..} = (\extractNewsResponseSourceCountry -> ExtractNewsResponse { extractNewsResponseSourceCountry, ..} ) <$> f extractNewsResponseSourceCountry
{-# INLINE extractNewsResponseSourceCountryL #-}

-- | 'extractNewsResponseSentiment' Lens
extractNewsResponseSentimentL :: Lens_' ExtractNewsResponse (Maybe Double)
extractNewsResponseSentimentL f ExtractNewsResponse{..} = (\extractNewsResponseSentiment -> ExtractNewsResponse { extractNewsResponseSentiment, ..} ) <$> f extractNewsResponseSentiment
{-# INLINE extractNewsResponseSentimentL #-}



-- * GeoCoordinatesResponse

-- | 'geoCoordinatesResponseLatitude' Lens
geoCoordinatesResponseLatitudeL :: Lens_' GeoCoordinatesResponse (Double)
geoCoordinatesResponseLatitudeL f GeoCoordinatesResponse{..} = (\geoCoordinatesResponseLatitude -> GeoCoordinatesResponse { geoCoordinatesResponseLatitude, ..} ) <$> f geoCoordinatesResponseLatitude
{-# INLINE geoCoordinatesResponseLatitudeL #-}

-- | 'geoCoordinatesResponseLongitude' Lens
geoCoordinatesResponseLongitudeL :: Lens_' GeoCoordinatesResponse (Double)
geoCoordinatesResponseLongitudeL f GeoCoordinatesResponse{..} = (\geoCoordinatesResponseLongitude -> GeoCoordinatesResponse { geoCoordinatesResponseLongitude, ..} ) <$> f geoCoordinatesResponseLongitude
{-# INLINE geoCoordinatesResponseLongitudeL #-}

-- | 'geoCoordinatesResponseCity' Lens
geoCoordinatesResponseCityL :: Lens_' GeoCoordinatesResponse (Maybe Text)
geoCoordinatesResponseCityL f GeoCoordinatesResponse{..} = (\geoCoordinatesResponseCity -> GeoCoordinatesResponse { geoCoordinatesResponseCity, ..} ) <$> f geoCoordinatesResponseCity
{-# INLINE geoCoordinatesResponseCityL #-}



-- * News

-- | 'newsId' Lens
newsIdL :: Lens_' News (Maybe Int)
newsIdL f News{..} = (\newsId -> News { newsId, ..} ) <$> f newsId
{-# INLINE newsIdL #-}

-- | 'newsTitle' Lens
newsTitleL :: Lens_' News (Maybe Text)
newsTitleL f News{..} = (\newsTitle -> News { newsTitle, ..} ) <$> f newsTitle
{-# INLINE newsTitleL #-}

-- | 'newsText' Lens
newsTextL :: Lens_' News (Maybe Text)
newsTextL f News{..} = (\newsText -> News { newsText, ..} ) <$> f newsText
{-# INLINE newsTextL #-}

-- | 'newsSummary' Lens
newsSummaryL :: Lens_' News (Maybe Text)
newsSummaryL f News{..} = (\newsSummary -> News { newsSummary, ..} ) <$> f newsSummary
{-# INLINE newsSummaryL #-}

-- | 'newsUrl' Lens
newsUrlL :: Lens_' News (Maybe Text)
newsUrlL f News{..} = (\newsUrl -> News { newsUrl, ..} ) <$> f newsUrl
{-# INLINE newsUrlL #-}

-- | 'newsImage' Lens
newsImageL :: Lens_' News (Maybe Text)
newsImageL f News{..} = (\newsImage -> News { newsImage, ..} ) <$> f newsImage
{-# INLINE newsImageL #-}

-- | 'newsPublishDate' Lens
newsPublishDateL :: Lens_' News (Maybe Text)
newsPublishDateL f News{..} = (\newsPublishDate -> News { newsPublishDate, ..} ) <$> f newsPublishDate
{-# INLINE newsPublishDateL #-}

-- | 'newsAuthor' Lens
newsAuthorL :: Lens_' News (Maybe Text)
newsAuthorL f News{..} = (\newsAuthor -> News { newsAuthor, ..} ) <$> f newsAuthor
{-# INLINE newsAuthorL #-}

-- | 'newsLanguage' Lens
newsLanguageL :: Lens_' News (Maybe Text)
newsLanguageL f News{..} = (\newsLanguage -> News { newsLanguage, ..} ) <$> f newsLanguage
{-# INLINE newsLanguageL #-}

-- | 'newsSourceCountry' Lens
newsSourceCountryL :: Lens_' News (Maybe Text)
newsSourceCountryL f News{..} = (\newsSourceCountry -> News { newsSourceCountry, ..} ) <$> f newsSourceCountry
{-# INLINE newsSourceCountryL #-}

-- | 'newsSentiment' Lens
newsSentimentL :: Lens_' News (Maybe Double)
newsSentimentL f News{..} = (\newsSentiment -> News { newsSentiment, ..} ) <$> f newsSentiment
{-# INLINE newsSentimentL #-}



-- * NewsArticle

-- | 'newsArticleId' Lens
newsArticleIdL :: Lens_' NewsArticle (Maybe Int)
newsArticleIdL f NewsArticle{..} = (\newsArticleId -> NewsArticle { newsArticleId, ..} ) <$> f newsArticleId
{-# INLINE newsArticleIdL #-}

-- | 'newsArticleTitle' Lens
newsArticleTitleL :: Lens_' NewsArticle (Maybe Text)
newsArticleTitleL f NewsArticle{..} = (\newsArticleTitle -> NewsArticle { newsArticleTitle, ..} ) <$> f newsArticleTitle
{-# INLINE newsArticleTitleL #-}

-- | 'newsArticleText' Lens
newsArticleTextL :: Lens_' NewsArticle (Maybe Text)
newsArticleTextL f NewsArticle{..} = (\newsArticleText -> NewsArticle { newsArticleText, ..} ) <$> f newsArticleText
{-# INLINE newsArticleTextL #-}

-- | 'newsArticleSummary' Lens
newsArticleSummaryL :: Lens_' NewsArticle (Maybe Text)
newsArticleSummaryL f NewsArticle{..} = (\newsArticleSummary -> NewsArticle { newsArticleSummary, ..} ) <$> f newsArticleSummary
{-# INLINE newsArticleSummaryL #-}

-- | 'newsArticleUrl' Lens
newsArticleUrlL :: Lens_' NewsArticle (Maybe Text)
newsArticleUrlL f NewsArticle{..} = (\newsArticleUrl -> NewsArticle { newsArticleUrl, ..} ) <$> f newsArticleUrl
{-# INLINE newsArticleUrlL #-}

-- | 'newsArticleImage' Lens
newsArticleImageL :: Lens_' NewsArticle (Maybe Text)
newsArticleImageL f NewsArticle{..} = (\newsArticleImage -> NewsArticle { newsArticleImage, ..} ) <$> f newsArticleImage
{-# INLINE newsArticleImageL #-}

-- | 'newsArticlePublishDate' Lens
newsArticlePublishDateL :: Lens_' NewsArticle (Maybe Text)
newsArticlePublishDateL f NewsArticle{..} = (\newsArticlePublishDate -> NewsArticle { newsArticlePublishDate, ..} ) <$> f newsArticlePublishDate
{-# INLINE newsArticlePublishDateL #-}

-- | 'newsArticleAuthor' Lens
newsArticleAuthorL :: Lens_' NewsArticle (Maybe Text)
newsArticleAuthorL f NewsArticle{..} = (\newsArticleAuthor -> NewsArticle { newsArticleAuthor, ..} ) <$> f newsArticleAuthor
{-# INLINE newsArticleAuthorL #-}

-- | 'newsArticleLanguage' Lens
newsArticleLanguageL :: Lens_' NewsArticle (Maybe Text)
newsArticleLanguageL f NewsArticle{..} = (\newsArticleLanguage -> NewsArticle { newsArticleLanguage, ..} ) <$> f newsArticleLanguage
{-# INLINE newsArticleLanguageL #-}

-- | 'newsArticleSourceCountry' Lens
newsArticleSourceCountryL :: Lens_' NewsArticle (Maybe Text)
newsArticleSourceCountryL f NewsArticle{..} = (\newsArticleSourceCountry -> NewsArticle { newsArticleSourceCountry, ..} ) <$> f newsArticleSourceCountry
{-# INLINE newsArticleSourceCountryL #-}

-- | 'newsArticleSentiment' Lens
newsArticleSentimentL :: Lens_' NewsArticle (Maybe Double)
newsArticleSentimentL f NewsArticle{..} = (\newsArticleSentiment -> NewsArticle { newsArticleSentiment, ..} ) <$> f newsArticleSentiment
{-# INLINE newsArticleSentimentL #-}



-- * SearchNewsResponse

-- | 'searchNewsResponseOffset' Lens
searchNewsResponseOffsetL :: Lens_' SearchNewsResponse (Int)
searchNewsResponseOffsetL f SearchNewsResponse{..} = (\searchNewsResponseOffset -> SearchNewsResponse { searchNewsResponseOffset, ..} ) <$> f searchNewsResponseOffset
{-# INLINE searchNewsResponseOffsetL #-}

-- | 'searchNewsResponseNumber' Lens
searchNewsResponseNumberL :: Lens_' SearchNewsResponse (Int)
searchNewsResponseNumberL f SearchNewsResponse{..} = (\searchNewsResponseNumber -> SearchNewsResponse { searchNewsResponseNumber, ..} ) <$> f searchNewsResponseNumber
{-# INLINE searchNewsResponseNumberL #-}

-- | 'searchNewsResponseAvailable' Lens
searchNewsResponseAvailableL :: Lens_' SearchNewsResponse (Int)
searchNewsResponseAvailableL f SearchNewsResponse{..} = (\searchNewsResponseAvailable -> SearchNewsResponse { searchNewsResponseAvailable, ..} ) <$> f searchNewsResponseAvailable
{-# INLINE searchNewsResponseAvailableL #-}

-- | 'searchNewsResponseNews' Lens
searchNewsResponseNewsL :: Lens_' SearchNewsResponse ([NewsArticle])
searchNewsResponseNewsL f SearchNewsResponse{..} = (\searchNewsResponseNews -> SearchNewsResponse { searchNewsResponseNews, ..} ) <$> f searchNewsResponseNews
{-# INLINE searchNewsResponseNewsL #-}


