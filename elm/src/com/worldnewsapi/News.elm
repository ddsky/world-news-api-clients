{-
   World News API
   The world's news wrapped into a single API.

   The version of the OpenAPI document: 1.0
   Contact: mail@worldnewsapi.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.News exposing
    ( extractNews
    , geoCoordinates
    , searchNews, Sort(..), sortVariants, Sortdirection(..), sortdirectionVariants
    )

import Api
import Api.Data
import Dict
import Http
import Json.Decode
import Json.Encode


type Sort
    = SortRelevance
    | SortPublishTime
    | SortSentiment


sortVariants : List Sort
sortVariants =
    [ SortRelevance
    , SortPublishTime
    , SortSentiment
    ]


stringFromSort : Sort -> String
stringFromSort model =
    case model of
        SortRelevance ->
            "relevance"

        SortPublishTime ->
            "publish-time"

        SortSentiment ->
            "sentiment"




type Sortdirection
    = SortdirectionAsc
    | SortdirectionDesc


sortdirectionVariants : List Sortdirection
sortdirectionVariants =
    [ SortdirectionAsc
    , SortdirectionDesc
    ]


stringFromSortdirection : Sortdirection -> String
stringFromSortdirection model =
    case model of
        SortdirectionAsc ->
            "asc"

        SortdirectionDesc ->
            "desc"





{-| Extract a news entry from a news site.
-}
extractNews : String -> Bool -> Api.Request Api.Data.InlineResponse2001
extractNews url_query analyze_query =
    Api.request
        "GET"
        "/extract-news"
        []
        [ ( "url", Just <| identity url_query ), ( "analyze", Just <| (\val -> if val then "true" else "false") analyze_query ) ]
        []
        Nothing
        Api.Data.inlineResponse2001Decoder



{-| Get the geo coordinates for a location. The location can be an exact address but also just the name of a city or country.
-}
geoCoordinates : String -> Api.Request Api.Data.InlineResponse2002
geoCoordinates location_query =
    Api.request
        "GET"
        "/geo-coordinates"
        []
        [ ( "location", Just <| identity location_query ) ]
        []
        Nothing
        Api.Data.inlineResponse2002Decoder



{-| Search for news.
-}
searchNews : Maybe String -> Maybe String -> Maybe String -> Maybe Float -> Maybe Float -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Maybe Sort -> Maybe Sortdirection -> Api.Request Api.Data.InlineResponse200
searchNews text_query sourceCountries_query language_query minSentiment_query maxSentiment_query earliestPublishDate_query latestPublishDate_query newsSources_query authors_query entities_query locationFilter_query offset_query number_query sort_query sortDirection_query =
    Api.request
        "GET"
        "/search-news"
        []
        [ ( "text", Maybe.map identity text_query ), ( "source-countries", Maybe.map identity sourceCountries_query ), ( "language", Maybe.map identity language_query ), ( "min-sentiment", Maybe.map String.fromFloat minSentiment_query ), ( "max-sentiment", Maybe.map String.fromFloat maxSentiment_query ), ( "earliest-publish-date", Maybe.map identity earliestPublishDate_query ), ( "latest-publish-date", Maybe.map identity latestPublishDate_query ), ( "news-sources", Maybe.map identity newsSources_query ), ( "authors", Maybe.map identity authors_query ), ( "entities", Maybe.map identity entities_query ), ( "location-filter", Maybe.map identity locationFilter_query ), ( "offset", Maybe.map String.fromInt offset_query ), ( "number", Maybe.map String.fromInt number_query ), ( "sort", Maybe.map stringFromSort sort_query ), ( "sort-direction", Maybe.map stringFromSortdirection sortDirection_query ) ]
        []
        Nothing
        Api.Data.inlineResponse200Decoder
