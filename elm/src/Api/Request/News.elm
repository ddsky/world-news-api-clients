{-
   World News API
   The world's news wrapped into a single API.

   The version of the OpenAPI document: 2.2.0
   Contact: mail@worldnewsapi.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Request.News exposing
    ( extractNews
    , extractNewsLinks
    , getGeoCoordinates
    , newsWebsiteToRSSFeed
    , retrieveNewsArticlesByIds
    , retrieveNewspaperFrontPage
    , searchNews
    , searchNewsSources
    , topNews
    )

import Api
import Api.Data exposing (..)
import Dict
import Http
import Json.Decode
import Json.Encode

{-| Extract a news article from a website to a well structure JSON object. The API will return the title, text, URL, images, videos, publish date, authors, language, source country, and sentiment of the news article.
-}
extractNews : String -> Maybe Bool -> Api.Request Api.Data.ExtractNews200Response
extractNews url_query analyze_query =
    Api.request
        "GET"
        "/extract-news"
        []
        [ ( "url", Just <| identity url_query ), ( "analyze", Maybe.map (\val -> if val then "true" else "false") analyze_query ) ]
        []
        Nothing
        Api.Data.extractNews200ResponseDecoder


{-| Extract news links from a news website.
-}
extractNewsLinks : String -> Maybe Bool -> Api.Request Api.Data.ExtractNewsLinks200Response
extractNewsLinks url_query analyze_query =
    Api.request
        "GET"
        "/extract-news-links"
        []
        [ ( "url", Just <| identity url_query ), ( "analyze", Maybe.map (\val -> if val then "true" else "false") analyze_query ) ]
        []
        Nothing
        Api.Data.extractNewsLinks200ResponseDecoder


{-| Retrieve the latitude and longitude of a location name. Given this information you can fill the location-filter parameter in the news search endpoint.
-}
getGeoCoordinates : String -> Api.Request Api.Data.GetGeoCoordinates200Response
getGeoCoordinates location_query =
    Api.request
        "GET"
        "/geo-coordinates"
        []
        [ ( "location", Just <| identity location_query ) ]
        []
        Nothing
        Api.Data.getGeoCoordinates200ResponseDecoder


{-| Turn a news website into an RSS feed. Any page of a news website can be turned into an RSS feed. Provide the URL to the page and the API will return an RSS feed with the latest news from that page.
-}
newsWebsiteToRSSFeed : String -> Maybe Bool -> Api.Request (Dict.Dict String Api.Data.Object)
newsWebsiteToRSSFeed url_query extractNews_query =
    Api.request
        "GET"
        "/feed.rss"
        []
        [ ( "url", Just <| identity url_query ), ( "extract-news", Maybe.map (\val -> if val then "true" else "false") extractNews_query ) ]
        []
        Nothing
        (Json.Decode.dict )


{-| Retrieve information about one or more news articles by their ids. The ids can be retrieved from the search news or top news APIs.
-}
retrieveNewsArticlesByIds : String -> Api.Request Api.Data.RetrieveNewsArticlesByIds200Response
retrieveNewsArticlesByIds ids_query =
    Api.request
        "GET"
        "/retrieve-news"
        []
        [ ( "ids", Just <| identity ids_query ) ]
        []
        Nothing
        Api.Data.retrieveNewsArticlesByIds200ResponseDecoder


{-| Get the front pages of newspapers from around the world. The API provides images of the front pages of newspapers from different countries. Here's an example of some of today's newspapers:
-}
retrieveNewspaperFrontPage : Maybe String -> Maybe String -> Maybe String -> Api.Request Api.Data.RetrieveNewspaperFrontPage200Response
retrieveNewspaperFrontPage sourceCountry_query sourceName_query date_query =
    Api.request
        "GET"
        "/retrieve-front-page"
        []
        [ ( "source-country", Maybe.map identity sourceCountry_query ), ( "source-name", Maybe.map identity sourceName_query ), ( "date", Maybe.map identity date_query ) ]
        []
        Nothing
        Api.Data.retrieveNewspaperFrontPage200ResponseDecoder


{-| Search and filter news by text, date, location, category, language, and more. The API returns a list of news articles matching the given criteria. Each returned article includes the title, the full text of the article, a summary, image URL, video URL, the publish date, the authors, the category, the language, the source country, and the sentiment of the article. You can set as many filtering parameters as you like, but you have to set at least one, e.g. text or language.
-}
searchNews : Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Float -> Maybe Float -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe String -> Maybe Int -> Maybe Int -> Api.Request Api.Data.SearchNews200Response
searchNews text_query textMatchIndexes_query sourceCountry_query language_query minSentiment_query maxSentiment_query earliestPublishDate_query latestPublishDate_query newsSources_query authors_query categories_query entities_query locationFilter_query sort_query sortDirection_query offset_query number_query =
    Api.request
        "GET"
        "/search-news"
        []
        [ ( "text", Maybe.map identity text_query ), ( "text-match-indexes", Maybe.map identity textMatchIndexes_query ), ( "source-country", Maybe.map identity sourceCountry_query ), ( "language", Maybe.map identity language_query ), ( "min-sentiment", Maybe.map String.fromFloat minSentiment_query ), ( "max-sentiment", Maybe.map String.fromFloat maxSentiment_query ), ( "earliest-publish-date", Maybe.map identity earliestPublishDate_query ), ( "latest-publish-date", Maybe.map identity latestPublishDate_query ), ( "news-sources", Maybe.map identity newsSources_query ), ( "authors", Maybe.map identity authors_query ), ( "categories", Maybe.map identity categories_query ), ( "entities", Maybe.map identity entities_query ), ( "location-filter", Maybe.map identity locationFilter_query ), ( "sort", Maybe.map identity sort_query ), ( "sort-direction", Maybe.map identity sortDirection_query ), ( "offset", Maybe.map String.fromInt offset_query ), ( "number", Maybe.map String.fromInt number_query ) ]
        []
        Nothing
        Api.Data.searchNews200ResponseDecoder


{-| Search whether a news source is being monitored by the World News API. This API is useful if you want to know if a specific news source is available in the API.
-}
searchNewsSources : String -> Api.Request Api.Data.SearchNewsSources200Response
searchNewsSources name_query =
    Api.request
        "GET"
        "/search-news-sources"
        []
        [ ( "name", Just <| identity name_query ) ]
        []
        Nothing
        Api.Data.searchNewsSources200ResponseDecoder


{-| Get the top news from a country in a language for a specific date. The top news are clustered from multiple sources in the given country. The more news in a cluster the higher the cluster is ranked.
-}
topNews : String -> String -> Maybe String -> Maybe Bool -> Api.Request Api.Data.TopNews200Response
topNews sourceCountry_query language_query date_query headlinesOnly_query =
    Api.request
        "GET"
        "/top-news"
        []
        [ ( "source-country", Just <| identity sourceCountry_query ), ( "language", Just <| identity language_query ), ( "date", Maybe.map identity date_query ), ( "headlines-only", Maybe.map (\val -> if val then "true" else "false") headlinesOnly_query ) ]
        []
        Nothing
        Api.Data.topNews200ResponseDecoder

