/*
World News API

The world's news wrapped into a single API.

API version: 2.2.0
Contact: mail@worldnewsapi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldnewsapi

import (
	"encoding/json"
)

// checks if the SearchNewsSources200ResponseSourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchNewsSources200ResponseSourcesInner{}

// SearchNewsSources200ResponseSourcesInner struct for SearchNewsSources200ResponseSourcesInner
type SearchNewsSources200ResponseSourcesInner struct {
	Name NullableString `json:"name,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Language NullableString `json:"language,omitempty"`
}

// NewSearchNewsSources200ResponseSourcesInner instantiates a new SearchNewsSources200ResponseSourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchNewsSources200ResponseSourcesInner() *SearchNewsSources200ResponseSourcesInner {
	this := SearchNewsSources200ResponseSourcesInner{}
	return &this
}

// NewSearchNewsSources200ResponseSourcesInnerWithDefaults instantiates a new SearchNewsSources200ResponseSourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchNewsSources200ResponseSourcesInnerWithDefaults() *SearchNewsSources200ResponseSourcesInner {
	this := SearchNewsSources200ResponseSourcesInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchNewsSources200ResponseSourcesInner) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchNewsSources200ResponseSourcesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SearchNewsSources200ResponseSourcesInner) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SearchNewsSources200ResponseSourcesInner) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) UnsetName() {
	o.Name.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchNewsSources200ResponseSourcesInner) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchNewsSources200ResponseSourcesInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *SearchNewsSources200ResponseSourcesInner) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *SearchNewsSources200ResponseSourcesInner) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) UnsetUrl() {
	o.Url.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchNewsSources200ResponseSourcesInner) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchNewsSources200ResponseSourcesInner) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *SearchNewsSources200ResponseSourcesInner) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *SearchNewsSources200ResponseSourcesInner) SetLanguage(v string) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *SearchNewsSources200ResponseSourcesInner) UnsetLanguage() {
	o.Language.Unset()
}

func (o SearchNewsSources200ResponseSourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchNewsSources200ResponseSourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	return toSerialize, nil
}

type NullableSearchNewsSources200ResponseSourcesInner struct {
	value *SearchNewsSources200ResponseSourcesInner
	isSet bool
}

func (v NullableSearchNewsSources200ResponseSourcesInner) Get() *SearchNewsSources200ResponseSourcesInner {
	return v.value
}

func (v *NullableSearchNewsSources200ResponseSourcesInner) Set(val *SearchNewsSources200ResponseSourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchNewsSources200ResponseSourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchNewsSources200ResponseSourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchNewsSources200ResponseSourcesInner(val *SearchNewsSources200ResponseSourcesInner) *NullableSearchNewsSources200ResponseSourcesInner {
	return &NullableSearchNewsSources200ResponseSourcesInner{value: val, isSet: true}
}

func (v NullableSearchNewsSources200ResponseSourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchNewsSources200ResponseSourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


