/*
World News API

The world's news wrapped into a single API.

API version: 2.0.0
Contact: mail@worldnewsapi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldnewsapi

import (
	"encoding/json"
)

// checks if the TopNews200ResponseTopNewsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TopNews200ResponseTopNewsInner{}

// TopNews200ResponseTopNewsInner struct for TopNews200ResponseTopNewsInner
type TopNews200ResponseTopNewsInner struct {
	News []TopNews200ResponseTopNewsInnerNewsInner `json:"news,omitempty"`
}

// NewTopNews200ResponseTopNewsInner instantiates a new TopNews200ResponseTopNewsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopNews200ResponseTopNewsInner() *TopNews200ResponseTopNewsInner {
	this := TopNews200ResponseTopNewsInner{}
	return &this
}

// NewTopNews200ResponseTopNewsInnerWithDefaults instantiates a new TopNews200ResponseTopNewsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopNews200ResponseTopNewsInnerWithDefaults() *TopNews200ResponseTopNewsInner {
	this := TopNews200ResponseTopNewsInner{}
	return &this
}

// GetNews returns the News field value if set, zero value otherwise.
func (o *TopNews200ResponseTopNewsInner) GetNews() []TopNews200ResponseTopNewsInnerNewsInner {
	if o == nil || IsNil(o.News) {
		var ret []TopNews200ResponseTopNewsInnerNewsInner
		return ret
	}
	return o.News
}

// GetNewsOk returns a tuple with the News field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopNews200ResponseTopNewsInner) GetNewsOk() ([]TopNews200ResponseTopNewsInnerNewsInner, bool) {
	if o == nil || IsNil(o.News) {
		return nil, false
	}
	return o.News, true
}

// HasNews returns a boolean if a field has been set.
func (o *TopNews200ResponseTopNewsInner) HasNews() bool {
	if o != nil && !IsNil(o.News) {
		return true
	}

	return false
}

// SetNews gets a reference to the given []TopNews200ResponseTopNewsInnerNewsInner and assigns it to the News field.
func (o *TopNews200ResponseTopNewsInner) SetNews(v []TopNews200ResponseTopNewsInnerNewsInner) {
	o.News = v
}

func (o TopNews200ResponseTopNewsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TopNews200ResponseTopNewsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.News) {
		toSerialize["news"] = o.News
	}
	return toSerialize, nil
}

type NullableTopNews200ResponseTopNewsInner struct {
	value *TopNews200ResponseTopNewsInner
	isSet bool
}

func (v NullableTopNews200ResponseTopNewsInner) Get() *TopNews200ResponseTopNewsInner {
	return v.value
}

func (v *NullableTopNews200ResponseTopNewsInner) Set(val *TopNews200ResponseTopNewsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTopNews200ResponseTopNewsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTopNews200ResponseTopNewsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopNews200ResponseTopNewsInner(val *TopNews200ResponseTopNewsInner) *NullableTopNews200ResponseTopNewsInner {
	return &NullableTopNews200ResponseTopNewsInner{value: val, isSet: true}
}

func (v NullableTopNews200ResponseTopNewsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopNews200ResponseTopNewsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


