/*
World News API

The world's news wrapped into a single API.

API version: 1.3.0
Contact: mail@worldnewsapi.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package worldnewsapi

import (
	"encoding/json"
)

// checks if the NewspaperFrontPages200ResponseFrontPage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NewspaperFrontPages200ResponseFrontPage{}

// NewspaperFrontPages200ResponseFrontPage struct for NewspaperFrontPages200ResponseFrontPage
type NewspaperFrontPages200ResponseFrontPage struct {
	Name NullableString `json:"name,omitempty"`
	Date NullableString `json:"date,omitempty"`
	Country NullableString `json:"country,omitempty"`
	Image NullableString `json:"image,omitempty"`
	Language NullableString `json:"language,omitempty"`
}

// NewNewspaperFrontPages200ResponseFrontPage instantiates a new NewspaperFrontPages200ResponseFrontPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewspaperFrontPages200ResponseFrontPage() *NewspaperFrontPages200ResponseFrontPage {
	this := NewspaperFrontPages200ResponseFrontPage{}
	return &this
}

// NewNewspaperFrontPages200ResponseFrontPageWithDefaults instantiates a new NewspaperFrontPages200ResponseFrontPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewspaperFrontPages200ResponseFrontPageWithDefaults() *NewspaperFrontPages200ResponseFrontPage {
	this := NewspaperFrontPages200ResponseFrontPage{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewspaperFrontPages200ResponseFrontPage) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewspaperFrontPages200ResponseFrontPage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *NewspaperFrontPages200ResponseFrontPage) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *NewspaperFrontPages200ResponseFrontPage) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) UnsetName() {
	o.Name.Unset()
}

// GetDate returns the Date field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewspaperFrontPages200ResponseFrontPage) GetDate() string {
	if o == nil || IsNil(o.Date.Get()) {
		var ret string
		return ret
	}
	return *o.Date.Get()
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewspaperFrontPages200ResponseFrontPage) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Date.Get(), o.Date.IsSet()
}

// HasDate returns a boolean if a field has been set.
func (o *NewspaperFrontPages200ResponseFrontPage) HasDate() bool {
	if o != nil && o.Date.IsSet() {
		return true
	}

	return false
}

// SetDate gets a reference to the given NullableString and assigns it to the Date field.
func (o *NewspaperFrontPages200ResponseFrontPage) SetDate(v string) {
	o.Date.Set(&v)
}
// SetDateNil sets the value for Date to be an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) SetDateNil() {
	o.Date.Set(nil)
}

// UnsetDate ensures that no value is present for Date, not even an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) UnsetDate() {
	o.Date.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewspaperFrontPages200ResponseFrontPage) GetCountry() string {
	if o == nil || IsNil(o.Country.Get()) {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewspaperFrontPages200ResponseFrontPage) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *NewspaperFrontPages200ResponseFrontPage) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *NewspaperFrontPages200ResponseFrontPage) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) UnsetCountry() {
	o.Country.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewspaperFrontPages200ResponseFrontPage) GetImage() string {
	if o == nil || IsNil(o.Image.Get()) {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewspaperFrontPages200ResponseFrontPage) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *NewspaperFrontPages200ResponseFrontPage) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *NewspaperFrontPages200ResponseFrontPage) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) UnsetImage() {
	o.Image.Unset()
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewspaperFrontPages200ResponseFrontPage) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewspaperFrontPages200ResponseFrontPage) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *NewspaperFrontPages200ResponseFrontPage) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *NewspaperFrontPages200ResponseFrontPage) SetLanguage(v string) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *NewspaperFrontPages200ResponseFrontPage) UnsetLanguage() {
	o.Language.Unset()
}

func (o NewspaperFrontPages200ResponseFrontPage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NewspaperFrontPages200ResponseFrontPage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Date.IsSet() {
		toSerialize["date"] = o.Date.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	return toSerialize, nil
}

type NullableNewspaperFrontPages200ResponseFrontPage struct {
	value *NewspaperFrontPages200ResponseFrontPage
	isSet bool
}

func (v NullableNewspaperFrontPages200ResponseFrontPage) Get() *NewspaperFrontPages200ResponseFrontPage {
	return v.value
}

func (v *NullableNewspaperFrontPages200ResponseFrontPage) Set(val *NewspaperFrontPages200ResponseFrontPage) {
	v.value = val
	v.isSet = true
}

func (v NullableNewspaperFrontPages200ResponseFrontPage) IsSet() bool {
	return v.isSet
}

func (v *NullableNewspaperFrontPages200ResponseFrontPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewspaperFrontPages200ResponseFrontPage(val *NewspaperFrontPages200ResponseFrontPage) *NullableNewspaperFrontPages200ResponseFrontPage {
	return &NullableNewspaperFrontPages200ResponseFrontPage{value: val, isSet: true}
}

func (v NullableNewspaperFrontPages200ResponseFrontPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewspaperFrontPages200ResponseFrontPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


