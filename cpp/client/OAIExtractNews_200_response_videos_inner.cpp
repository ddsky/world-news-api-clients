/**
 * World News API
 * The world's news wrapped into a single API.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: mail@worldnewsapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtractNews_200_response_videos_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtractNews_200_response_videos_inner::OAIExtractNews_200_response_videos_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtractNews_200_response_videos_inner::OAIExtractNews_200_response_videos_inner() {
    this->initializeModel();
}

OAIExtractNews_200_response_videos_inner::~OAIExtractNews_200_response_videos_inner() {}

void OAIExtractNews_200_response_videos_inner::initializeModel() {

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_thumbnail_isSet = false;
    m_thumbnail_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIExtractNews_200_response_videos_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtractNews_200_response_videos_inner::fromJsonObject(QJsonObject json) {

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_thumbnail_isValid = ::OpenAPI::fromJsonValue(m_thumbnail, json[QString("thumbnail")]);
    m_thumbnail_isSet = !json[QString("thumbnail")].isNull() && m_thumbnail_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIExtractNews_200_response_videos_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtractNews_200_response_videos_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_thumbnail_isSet) {
        obj.insert(QString("thumbnail"), ::OpenAPI::toJsonValue(m_thumbnail));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIExtractNews_200_response_videos_inner::getSummary() const {
    return m_summary;
}
void OAIExtractNews_200_response_videos_inner::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIExtractNews_200_response_videos_inner::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIExtractNews_200_response_videos_inner::is_summary_Valid() const{
    return m_summary_isValid;
}

qint32 OAIExtractNews_200_response_videos_inner::getDuration() const {
    return m_duration;
}
void OAIExtractNews_200_response_videos_inner::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIExtractNews_200_response_videos_inner::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIExtractNews_200_response_videos_inner::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIExtractNews_200_response_videos_inner::getThumbnail() const {
    return m_thumbnail;
}
void OAIExtractNews_200_response_videos_inner::setThumbnail(const QString &thumbnail) {
    m_thumbnail = thumbnail;
    m_thumbnail_isSet = true;
}

bool OAIExtractNews_200_response_videos_inner::is_thumbnail_Set() const{
    return m_thumbnail_isSet;
}

bool OAIExtractNews_200_response_videos_inner::is_thumbnail_Valid() const{
    return m_thumbnail_isValid;
}

QString OAIExtractNews_200_response_videos_inner::getTitle() const {
    return m_title;
}
void OAIExtractNews_200_response_videos_inner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIExtractNews_200_response_videos_inner::is_title_Set() const{
    return m_title_isSet;
}

bool OAIExtractNews_200_response_videos_inner::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIExtractNews_200_response_videos_inner::getUrl() const {
    return m_url;
}
void OAIExtractNews_200_response_videos_inner::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIExtractNews_200_response_videos_inner::is_url_Set() const{
    return m_url_isSet;
}

bool OAIExtractNews_200_response_videos_inner::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIExtractNews_200_response_videos_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thumbnail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtractNews_200_response_videos_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
